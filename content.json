{"pages":[{"title":"关于","text":"","link":"/about/"}],"posts":[{"title":"1-a2l文件生成","text":"a2l文件生成* ASAM MCD-2MC标准，也称为ASAP2，是由协会为自动化及测量系 统标准（提出的数据定义标准ASAM）。ASAP2是用于测量，校准和诊断系统的非面向对象的数据描述。有关ASAM和ASAM MCD-2MC（ASAP2）标准的更多信息，请访问ASAM网站：。 代码生成器允许您在代码生成过程中导出包含有关模型信息的ASAP2文件。 您可以运行ASAP2文件生成的交互式示例。要在MATLAB打开例子®命令提示符下，输入以下命令： rtwdemo_asap2 注意Simulink的® 编码器™为ASAP2文件生成的支持版本无关。默认情况下，软件生成ASAP2版本1.31格式，但生成的模型信息通常与所有ASAP2版本兼容。ASAP2文件生成对于ASAP2测量和校准工具的特定需求也是中性的。该软件提供自定义API，您可以使用它来自定义ASAP2文件生成以生成ASAP2版本并满足ASAP2工具的特定需求。 你应该知道什么 支持ASAP2的目标 定义ASAP2信息 生成ASAP2文件 ASAP2文件的结构 为数据测量和校准创建基于主机的ASAM -ASAP2数据定义文件 你应该知道什么要使用ASAP2文件生成，您应该熟悉以下主题： ASAM和ASAP2标准和术语。见ASAM在网站上。 Simulink数据对象。数据对象用于提供模型中未包含的信息。有关概述，请参阅数据对象（Simulink）。 在生成的代码中存储和表示信号和参数。请参阅用于原型设计和调试的数据访问（SimulinkCoder）。 如果您得到授权的嵌入式编码®，也看到了嵌入式编码话题数据表示和访问。 支持ASAP2的目标ASAP2文件生成可用于所有代码生成器系统目标文件配置。例如， Generic Real-TimeTarget（grt.tlc）允许您生成ASAP2文件，作为代码生成和构建过程的一部分。 EmbeddedCoder（ert.tlc）系统目标文件选择还允许您生成ASAP2文件，作为代码生成和构建过程的一部分。 ASAM-ASAP2 Data DefinitionTarget （asap2.tlc）允许您仅生成ASAP2文件，而无需构建可执行程序。 在Generate an ASAP2File。 定义ASAP2信息 定义参数和信号的ASAP2信息 内存地址属性 ASAP2文件的自动ECU地址替换（嵌入式编码器） 为查找表定义ASAP2信息 定义参数和信号的ASAP2信息ASAP2文件生成过程需要有关模型中参数和信号的信息。其中一些信息包含在模型本身中。您必须在工作空间或数据字典中使用Simulink数据对象来提供其余的数据。在某些情况下，工作空间对象的使用是可选的。 您可以使用模型数据编辑器和内置Simulink数据对象来提供信息。例如，您可以使用 Simulink.Signal对象提供MEASUREMENT信息和 Simulink.Parameter对象以提供CHARACTERISTIC信息。此外，您可以使用派生自Simulink.Signal和Simulink.Parameter提供信息的数据类中的数据对象 。有关数据对象的信息，请参阅数据对象。 下表包含ASAP2文件生成所需的最小数据属性集。一些数据属性在模型中定义; 其他的是在对象的属性中提供的。对于在对象Simulink.Signal或Simulink.Parameter对象中定义的属性，该表提供关联的属性名称。 数据属性 定义于 物业名称 名称（符号） 模型和数据对象 继承自参数或信号名称解析的数据对象的句柄 描述 数据对象 Description 数据类型 模型或数据对象 DataType 缩放 模型或数据对象 DataType （如果是定点数据类型） 最低允许值 模型或数据对象 Min 最大允许值 模型或数据对象 Max 单元 模型或数据对象 Unit 内存地址（可选） 模型或数据对象 MemoryAddress_ASAP2（可选;请参阅内存地址属性。） 内存地址属性如果在代码生成之前内存地址属性未知，则代码生成器会ECUAddress在生成的ASAP2文件中插入占位符文本。您可以通过对生成的文件进行后处理来替换占位符的实际地址。有关示例，请参阅该文件。解析您提供的链接器映射文件，并用实际内存地址替换ASAP2文件中的占位符。由于链接器映射文件因编译器而异，因此您可能需要修改正则表达式代码以匹配您使用的链接器映射的格式。matlabroot/toolbox/rtw/targets/asap2/asap2/asap2post.masap2post.mECUAddressasap2post.m 注意如果嵌入式编码器已获得许可并安装在您的系统上，并且您正在为嵌入式目标生成可执行文件和可链接格式（ELF）或程序数据库（PDB）文件，则可以使用该rtw.asap2SetAddress功能自动更换ECU地址。有关更多信息，请参阅ASAP2文件的自动ECU地址替换（嵌入式编码器）。 如果在代码生成之前知道内存地址属性，则可以在数据项或数据对象中定义它。默认情况下，该MemoryAddress_ASAP2属性不存在的Simulink.Signal或 Simulink.Parameter数据对象类。如果要添加属性，请添加一个名为MemoryAddress_ASAP2自定义类的属性，该类是Simulink或ASAP2类的子类。有关子类化Simulink数据类的信息，请参阅定义数据类（Simulink）。 注意在以前的版本中，对于ASAP2文件生成，您必须明确地将对象定义为ASAP2.Signal和ASAP2.Parameter。这不再是限制。如上所述，您可以使用内置的Simulink对象生成ASAP2文件。如果您一直在使用早期版本，则可以继续使用ASAP2对象。如果在先前版本中创建了其中一个ASAP2对象，并且您在此版本中使用了它，则MATLAB命令窗口会在第一次加载对象时显示警告。 下表显示已替换先前版本的ASAP2对象属性的Simulink对象属性： ASAP2与Simulink参数和信号对象属性之间的差异 ASAP2对象属性（上一个） Simulink对象属性（当前） LONGID_ASAP2 描述 PhysicalMin_ASAP2 我 PhysicalMax_ASAP2 马克斯 Units_ASAP2 单元 ASAP2文件的自动ECU地址替换（嵌入式编码器）如果嵌入式编码器已获得许可并安装在您的系统上，并且您正在为嵌入式目标生成可执行文件和可链接格式（ELF）或程序数据库（PDB）文件，则可以使用该rtw.asap2SetAddress功能自动替换ECUAddress占位符内存地址值，生成的ASAP2文件中的实际地址。 如果在代码生成之前内存地址属性未知，则代码生成器会ECUAddress在生成的ASAP2文件中插入占位符文本，如下例所示。 / begin CHARACTERISTIC / *姓名* / Ki / *长标识符* /“” / *键入* / VALUE / * ECU地址* / 0x0000 / * @ ECU_Address @ Ki @ * / 要替换ECUAddress占位符的实际地址，请使用该rtw.asap2SetAddress函数处理生成的ASAP2文件。一般语法如下： rtw.asap2SetAddress（ASAP2File，InfoFile） 参数是字符向量，用于指定生成的ASAP2文件的名称以及生成的可执行ELF文件的名称，Microsoft工具链中的PDB文件或模型的DWARF调试信息文件。调用时， rtw.asap2SetAddress从指定的ELF，PDB或DWARF文件中提取实际的ECU地址，并将ASAP2文件中的占位符替换为实际地址，例如： / begin CHARACTERISTIC / *姓名* / Ki / *长标识符* /“” / *键入* / VALUE / * ECU地址* / 0x40009E60 为查找表定义ASAP2信息SimulinkCoder软件为查找表数据及其断点生成ASAP2描述。该软件表示1-d表的数据作为CURVE信息，如2-d表数据MAP信息，和断点作为AXIS_DESCR和AXIS_PTS信息。您可以使用以下Simulink查找表块之一对查找表建模： 直接查找表（nD） - 1和2维 插值使用Prelookup - 1和2维 一维查找表 二维查找表 nD查找表 - 1和2维 该软件支持以下类型的查找表断点（轴点）： 断点类型 生成 可在多个工作台轴（公共轴）之间进行调整和共享 COM_AXIS 固定和不固定（固定轴） 以下变体之一FIX_AXIS： 可调，但不在多个表之间共享（标准轴） STD_AXIS FIX_AXIS_PAR 如果断点是等距间距的整数，则等距间距是2的幂 FIX_AXIS_PAR_DIST 如果断点是等距间距的整数 FIX_AXIS_PAR_LIST 如果断点是具有非等距间距的整数 为ASAP2代码生成配置块时： 对于表数据，请使用Simulink.Parameter具有非Auto存储类的数据对象。 对于在多个表轴（COM_AXIS）之间共享的可调断点数据，请使用Simulink.Parameter具有非Auto存储类的数据对象。 对于固定的，不可断开的断点数据（FIX_AXIS），请使用块参数对话框中指定的工作空间变量或数组。断点应存储在代码整数，所以数据类型应该是一个内置的整数型（int8，int16，int32，uint8，uint16，或uint32），定点数据类型，或等效的别名类型。 对于多个表之间未共享的可调断点数据（STD_AXIS）： 创建一个Simulink.Bus对象来定义struct包装（字段的名称和顺序）。参数结构的字段必须对应于查找表数据和查找表块的每个轴。例如，在具有2维的nD查找表块中，结构必须仅包含三个字段。该总线对象描述了查找特性的记录布局。 创建一个Simulink.Parameter对象来表示可调参数。 创建表和轴值。 （可选）指定参数对象的“ 单位”，“ 最小 ”和“ 最大”属性。这些属性仅适用于表数据。 以下是以标准轴格式生成ASAP2文件的nD查找表记录的示例： / begin CHARACTERISTIC / *名称* / STDAxisParam … / *记录布局* / Lookup1D_X_WORD_Y_FLOAT32_IEEE … 开始AXIS_DESCR / * X轴点数描述* / / * Axis Type * / STD_AXIS … / end AXIS_DESCR / end CHARACTERISTIC / begin RECORD_LAYOUT Lookup1D_X_WORD_Y_FLOAT32_IEEE AXIS_PTS_X 1 WORD INDEX_INCR DIRECT FNC_VALUES 2 FLOAT32_IEEE COLUMN_DIR DIRECT / end RECORD_LAYOUT 注意示例模型rtwdemo_asap2说明了查找表块的ASAP2文件生成，包括可调参数（COM_AXIS）和固定（FIX_AXIS）查找表断点。 生成ASAP2文件 关于生成ASAP2文件 使用GRT或ERT系统目标文件 使用ASAM -ASAP2数据定义目标 为参考模型生成ASAP2文件 合并顶级和参考模型的ASAP2文件 关于生成ASAP2文件您可以通过以下方式之一从模型生成ASAP2文件： 使用通用实时目标或嵌入式编码器目标生成ASAP2文件，作为代码生成和构建过程的一部分。 使用ASAM -ASAP2数据定义目标仅生成ASAP2文件，而不构建可执行文件。 本节讨论如何使用具有内置ASAP2支持的目标生成ASAP2文件。有关示例，请参阅ASAP2示例模型rtwdemo_asap2。 使用GRT或ERT系统目标文件使用通用实时目标或嵌入式编码器系统目标文件为模型生成ASAP2数据定义的过程如下： 使用模型数据编辑器（视图 &gt; 模型数据编辑器）将存储类应用于信号，块状态和块参数，如将存储类应用于单个信号，状态和参数数据元素中所述。使用信号和状态名称来引用相应的MEASUREMENT记录和参数对象名称以引用CHARACTERISTIC记录。 如果在代码映射编辑器中设置了相应数据类别的默认存储类（默认设置）， 请使用除Auto,, FileScope或 以外的存储类或自定义存储类 。例如，使用 将数据项配置为生成的代码中的非结构化全局变量。DefaultModeldefaultExportedGlobal 注意 如果存在以下一个或多个条件，则ASAP2文件中不会显示该数据项： 您应用的存储类之一Auto， FileScope或Default （通过Model default）。 您应用自定义存储类，使代码生成器生成宏或不可寻址的变量。 使用模型数据编辑器根据需要为每个数据项配置其余属性。 在“ 代码生成”窗格上，单击“ 浏览”以打开“系统目标文件浏览器”。在浏览器中，选择grt.tlc或基于ERT的目标文件，然后单击“ 确定”。 在“ 代码生成 &gt; 接口”窗格的“ 数据交换接口”子组中，选择“ ASAP2接口”。 选中“ 代码生成”窗格上的“ 仅生成代码”复选框。 点击应用。 建立模型。 代码生成器将ASAP2文件写入构建文件夹。默认情况下，文件被命名model.a2l，其中 model是模型的名称。ASAP2设置文件控制ASAP2文件名。有关详细信息，请参阅自定义生成的ASAP2文件。 使用ASAM -ASAP2数据定义目标使用ASAM -ASAP2数据定义目标为模型生成ASAP2数据定义的过程如下： 使用模型数据编辑器（视图 &gt; 模型数据编辑器）将存储类应用于信号，块状态和块参数，如将存储类应用于单个信号，状态和参数数据元素中所述。使用信号和状态名称来引用相应的MEASUREMENT记录和参数对象名称以引用CHARACTERISTIC记录。 如果在代码映射编辑器中设置了相应数据类别的默认存储类（默认设置）， 请使用除Auto,, FileScope或 以外的存储类或自定义存储类 。例如，使用 将数据项配置为生成的代码中的非结构化全局变量。DefaultModeldefaultExportedGlobal 注意 如果存在以下一个或多个条件，则ASAP2文件中不会显示该数据项： 您应用的存储类之一Auto， FileScope或Default （通过Model default）。 您应用自定义存储类，使代码生成器生成宏或不可寻址的变量。 使用模型数据编辑器根据需要为每个数据项配置其余属性。 在“ 代码生成”窗格上，单击“ 浏览”以打开“系统目标文件浏览器”。在浏览器中，选择asap2.tlc并单击“ 确定”。 选中“ 代码生成”窗格上的“ 仅生成代码”复选框。 点击应用。 建立模型。 在Simulink的编码器的代码生成的ASAP2文件写入生成文件夹。默认情况下，文件被命名model.a2l，其中 model是模型的名称。ASAP2设置文件控制ASAP2文件名。有关详细信息，请参阅自定义生成的ASAP2文件。 为参考模型生成ASAP2文件构建过程可以为模型引用层次结构中的每个引用模型生成ASAP2文件。在生成的ASAP2文件中，MEASUREMENT记录表示引用模型内的信号和状态。 要为引用的模型生成ASAP2文件，请为顶部模型和参考层次结构中的每个引用模型选择ASAP2文件生成。例如，如果您使用的是通用实时目标或嵌入式编码器目标，请按照使用GRT或ERT系统目标文件中描述的过程获取顶级模型和每个引用的模型。 合并顶级和参考模型的ASAP2文件使用函数rtw.asap2MergeMdlRefs合并为顶部模型和引用模型生成的ASAP2文件。该函数具有以下语法： [status，info] = rtw.asap2MergeMdlRefs（topModelName，asap2FileName） topModelName 是包含一个或多个引用模型的模型的名称。 asap2FileName 是您为合并的ASAP2文件指定的名称。 可选：：status假（逻辑0）如果合并完成，真（逻辑1），否则。 可选：：info返回有关合并失败，如果附加信息status是真实的。否则，它返回一个空字符向量。 请考虑以下示例。 [status，info] = rtw.asap2MergeMdlRefs（’myTopMdl’，’merged.a2l’） 此命令合并为顶级模型生成的ASAP2文件myTopMdl及其在文件中引用的模型merged.a2l。 示例模型rtwdemo_asap2包括合并ASAP2文件的示例。 ASAP2文件的结构下表概述了ASAP2文件的基本结构，并描述了目标语言编译器（TLC）函数和用于创建文件每个部分的文件： ASAP2文件的静态部分以粗体显示。 函数调用由表示%&lt;FunctionName()&gt;。 文件部分 asap2main.tlc的内容 包含函数定义的TLC文件 文件头 %&lt;ASAP2UserFcnWriteFileHead()&gt; asap2userlib.tlc /begin PROJECT “” /begin PROJECT “%&lt;ASAP2ProjectName&gt;“ asap2setup.tlc */begin HEADER “” * /begin HEADER“%&lt;ASAP2HeaderName&gt;“ asap2setup.tlc HEADER 内容 %&lt;ASAP2UserFcnWriteHeader()&gt; asap2userlib.tlc /end HEADER /end HEADER asap2userlib.tlc */begin MODULE “” * /begin MODULE “%&lt;ASAP2ModuleName&gt;“} asap2setup.tlc MODULE 内容： asap2userlib.tlc - A2ML %&lt;ASAP2UserFcnWriteHardwareInterface()&gt; asap2userlib.tlc - MOD_PAR - MOD_COMMON … 依赖于模型的MODULE内容： %&lt;SLibASAP2WriteDynamicContents()&gt; asap2lib.tlc 调用用户定义的函数： - RECORD_LAYOUT …WriteRecordLayout_TemplateName() user/templates/… - CHARACTERISTIC - ParameterGroups …WriteCharacteristic_TemplateName() - ModelParameters …WriteCharacteristic_Scalar() - MEASUREMENT …WriteMeasurement() asap2userlib.tlc - ExternalInputs - BlockOutputs - COMPU_METHOD …WriteCompuMethod() asap2userlib.tlc /end MODULE /end MODULE 文件页脚/尾部 %&lt;ASAP2UserFcnWriteFileTail()&gt; asap2userlib.tlc 为数据测量和校准创建基于主机的ASAM -ASAP2数据定义文件在MATLAB中试一试 此模型显示ASAP2数据导出。ASAP2是自动化和测量系统标准化协会（ASAM）提出的数据定义标准。 打开示例模型 打开示例模型rtwdemo_asap2。 open_system（’rtwdemo_asap2’）; ASAP2是用于测量，校准和诊断系统的非面向对象的数据描述。有关ASAM和ASAP2标准的更多信息，请参阅ASAM网站：https：//www。asam .de。 使用Simulink®数据对象和测试点信号实现ASAP2数据定义。使用目标语言编译器（TLC），您可以为您的应用程序创建高度自定义的解决方案。有关ASAP2文件生成的详细信息，请参阅SimulinkCoder®文档。 您可以通过在“配置参数”对话框的“代码生成”&gt;“接口”窗格中选择ASAP2接口来配置ASAP2文件生成。 //////////////////////////////////////////////////////////////////////////////////////////// 1、打开Configuration Parameters–Code Generation-Interface–勾选ASAP2 interface 2、通过asap（*.a2l,*.map）修改地址","link":"/blog-cn/15144c0c/1-a2l%E6%96%87%E4%BB%B6%E7%94%9F%E6%88%90/"},{"title":"11-Matlab-Simulink代码生成","text":"把手教你代码生成（下）：SIMULINK代码生成 ================== 本文主要参照书《SIMULINK仿真与代码生成技术入门到精通》 Sinmulink coder 与Matlabcoder生成的方式并不相同，前者在代码生成的输入输出定义中，并不能将其定义为结构体等类型，只能将输入输出定义为矩阵形式。同样的将函数封装为MATLABfunction，设置输入输出端口。其中输入端口必须重新设置，右键端口1，点击“BlockParameters”选项，将“Port dimensions”设置为相应的输入格式，在本算例中设置为[41]。并且要对模型中的信号线命名，增加生成代码的可读性。操作为右键信号线，选择如图15中选项。 图15 信号线命名 点击如图16选项，进入代码设置界面。 图16 进入设置界面 如图17中点击“System target file”右侧的“Browse”，如图选择“Embedded coder”。 图17 硬件选项 其中的Toolchain setting 设置为下图所示。 图18 Toolchain setting 如图18，点击“Custom Code”选项并将最上方的选项框打勾 图18 Custom Code 点击其中的“Code placement”选项，如下图选中最后一个选项。 图19 Code placement 同理，如图选中如下图选项 图20 Code placement 如图21，调用出“Code generate advisor”选项。选中此项目，点击“Run SelectChecks”，依据报告进行相应的设置调整 图21 设置检查选项 最后点击“Build model”，生成代码如下图 图22 代码生成图 SIMULINK代码生成参数配置在Simulink完成代码移植前需要对Configuration Parameters配置，ConfigurationParameters中集中管理着模型的代码生成方法、格式等约束条件，为了生成嵌入式代码，至少需要配合3部分：模型的解算器Solver、模型的系统目标文件（嵌入式系统目标文件），硬件实现规定（HardwareImplementation）。 图23 Model Configuration Parameters配置界面图 5.1 模型的解算器Solver模型解算器solver页面，如下图 图24 Solver图 Solver options中的Type选择为Fixed-stepSolver options中的Solver选择为discrete，理由：由于模型不是连续状态。Solver options中的Fixed-stepsize设置为auto，针对STM32的代码生成过程中，硬件驱动工具箱往往将步长stepsize作为其外设或内核中定时器的中断周期，使得生成打算法代码在硬件芯片中以同样的时间间隔执行。5.2 硬件实现规定（Hardware Implementation）Hardware Implementation页面，如下图 图25 Hardware Implementation图 Hardware board（硬件板）：选择为None，不选择具体操作系统。Device vendor、Device type：设备制造商和设备型号。Largest atomic size：最大原子尺寸，关系数据的储存形式。5.3 代码生成规定（Code Generation）其内容包扩Report（报告）、Comments（注释）、Symbols（定义规则）、CustomCode（自定义代码）、Interface（接口）、CodeStyle（代码风格）、Verification（代码验证方式SIL和PIL配置）、Templates（生成模板）、CodePlacement（代码存储方式）、Data Type Replacement（自定义类型名）、MemorySections（储存段设置）。5.3.1Code Generation配置，如下图： 图26 Code Generation图 Code Generation中的System target file选择ert.tlc选项，生成嵌入式代码。5.3.2 Report子标签配置，如下图： 图27 Report图 Creat code generation report:生成HTML格式生成报告。Open report automatically:生成报告自动打开。Static code metrics:生成静态代码参数指标，包括程序大小，占用内存大小等。5.3.3 Comments子标签配置，如下图： 图28 Comments图 Include comments:生成代码自动添加注释。Simulink block/Stateflow object comments:注释带有代码跳转对应模型的链接。5.3.4 Symbols子标签配置，如下图： 图29 Symbols图 代码生成的命名规则，若无特殊要求不建议改动。5.3.5 Custom Code子标签配置，如下图： 图30 Custom Code图 用于添加用户自定义的源文件、头文件、文件夹或库文件。5.3.6 Interface子标签配置，如下图： 图31 Interface图 Code replacementlibrary：与目标语言的数学函数及操作函数库挂接，不用配置，系统自动选择。Support 参数： 嵌入式编码器对代码生成的支持功能，需要就选择。Code Interface与DataExchange用来配置生成代码的接口及数据记录方式，建议使用默认配置。5.3.7 Code Style子标签配置，如下图： 图32Code Style图 Code Style：影响代码生成风格，对代码本身无影响，不用操作。5.3.8 Verification子标签配置，如下图： 图33 Verification图 Code profiling：用于选择是否测量任务执行时间和函数执行时间及变量名。Code coverage for SILor PIL：SIL和PIL的代码覆盖度，用到可进行设置。5.3.9 Template子标签配置，如下图： 图34 Template图 Template：代码生成的模板，影响代码段生成的顺序，默认配置。Generate an example main program:示例主函数包含main（）函数和一个调度器代码。5.3.10 Code Placement子标签配置，如下图： 图35 Code Placement图Golbal data placement:用于选择全局变量定义方式，定义在源文件中还是单独进行定义。Code packaging:影响最终生成文件个数，可将一些文件合并，对代码运行无影响。5.3.11 Data Type Replacement子标签配置，如下图： 图36 Data Type Replacement图 Data Type Replacement：用于自定义数据类型的命名，可以不进行操作，使用默认。5.3.12 Memory Sections子标签配置，如下图： 图37 Memory Sections图 MemorySections:设置函数、常数、输入/输出、数据和参数的存储段，只影响存储的方式，是固定还是变量存储，对实际的数据类型无影响。Code Generation中Function Packaging被选择，则可以对函数和内部数据存储段进行选择。5.3.13 Code Generationreporter，如下图： 图38代码生成报告图 Contents:包含所选择的各个部分报告，可以通过报告查找生成的代码存在的问题。Model files:包含模型的代码及其所用的头文件，报告中最主要的内容。Subsystem files:包含各个子系统的源文件和头文件，便于进行模块移植。 针对STM32F7的SIMULINK代码生成配置采用Simulink coder 一键生成STM32F7的嵌入式代码具有简单方便的特点，但simulinklibrarybrowser本身并不支持STM32的开发，本文选择STM32-MAT/TARGET作为支持STM32的开发工具加载到Simulink中，本文针对STM32-MAT/TARGET下的Simulink代码生成进行配置。STM32-MAT/TARGET加载到Simulink中，可调用模块如下图 图39 TSP-STM32模块图 点击Simulation→Model Configuration Parameters进入代码生成配置界面，如下图 图40 Model Configuration Parameters配置界面图 为了生成嵌入式代码，至少需要配合3部分：模型的解算器Solver、模型的系统目标文件（stm32.tlc），硬件实现规定（HardwareImplementation）。模型解算器solver页面，如下图 图41 Solver图 Solver options中的Type选择为Fixed-stepSolver options中的Solver选择为discrete，理由：由于STM32不是连续状态。Solver options中的Fixed-stepsize设置为auto，针对STM32的代码生成过程中，硬件驱动工具箱往往将步长stepsize作为其外设或内核中定时器的中断周期，使得生成打算法代码在硬件芯片中以同样的时间间隔执行。Code Generation中系统目标文件选择，如下图 图42 Code Generation图 在选择框中选择stm32.tlc之后，CodeGeneration标签页下面的子标签也会发生变化，提供更多的功能选择标签，如下图所示，方框内为新增子标签。 图43 STM32子标签图 Code Generation下关于STM32子标签的配置STM32 Options子标签进行路径配置，如下图 图44 STM32 Options图 Download Application功能：是否开启STM32CubeMX生成工程。STM32CubeMX Path update功能：自动更新STM32CubeMX的安装路径。Installed Full Path：STM32-MAT/TARGET的安装路径。Model configuration (ioc) Full Path：使用STM32CubeMX构建的硬件模型文件路径。STM32 Project Files子标签用于Matlab矩阵的C代码转换，如下图 图45 STM32 Project Files图 getBuffPtr是一个由STM32-MAT/TARGET提供的C函数，用于将MATLAB矩阵转换成C指针。用到可添加。Matlab与simulink对比分析本文针对Quater_to_Euler函数在matlab coder 与simulink coder中分别转化为C代码，其中主函数的计算部分如下图。 图23 simulink代码生成后的主函数 图24 matlab代码生成后的主函数 可见针对转化后的代码可读性，matlab转换的c函数的可读性强于simulink。这与m语言与c语言相似有关。因此，M-function中的函数最好通过matlabcoder转化为C语言。","link":"/blog-cn/e11de62f/11-Matlab-Simulink%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90/"},{"title":"11-Matlab-Simulink代码生成01","text":"把手教你代码生成（上）：MATLAB代码生成 ============== 本文主要参照书《SIMULINK仿真与代码生成技术入门到精通》 MATLAB®Coder™从MATLAB代码生成可读和可移植的C和C ++代码。它支持大多数MATLAB语言和广泛的工具箱。可以将生成的代码集成到项目中作为源代码，静态库或动态库。还可以使用MATLAB环境中生成的代码，以加快MATLAB代码计算密集型部分。 命令窗口输入“coder”，会弹出图1界面： 图1 Coder界面 点击图1中红色方框可以加载.M文件，但是只能加载函数类文件，即文件中要有明确的输入输出，若一个文件中包含另一个文件，则要将其文档也一起加载。 加载完毕后点击右下角的 “NEXT”,进行下一步操作。 若在给出方程的一种引用方式，如图2中的Quater_to_Euler([1;0;0;0])，之后点击 “Autodefine Input Types”,则系统可自动定义其为4*1的double矩阵。 同样也可以手动定义。点击图3中的红色方框，可以设置函数输入变量的类型。变量类型满足C语言的全部要求，也可以设置为矩阵形式，可以设置为结构体，结构体声明中可以直接输入结构体名字及变量名字。具体信息可详见蓝色的“learnmore”。定义前最好知道函数输入的维数，若定义为不定维数的矩阵，影响其执行效率，增多代码数量。 图2 自动定义输入类型 图3 手动定义输入类型 设计输出后点击右下角的“NEXT”,进行下一步操作。 图4 程序检测界面 本步为源程序检测，给出函数的数值输入就可以在对话框显示出具体结果，点击图4中的“Check ForIssues”可以检测程序是否有错误不可以生成C文件，若有错误则根据提示进行修改。若无错误则会弹出图5的界面。界面下方弹出的是计算结果，程序界面显示的为调用次数。 图5 程序检测执行界面 M语言转化成C语言要在使用前声明变量，在上图中已经将pitch等变量声明为结构体形式，若按照M语言的矩阵声明格式，则会报错（如图6），若先将矩阵定义为m*n的零矩阵，则可避免错误 图6错误声明矩阵的形式 设计输出后点击右下角的“NEXT”,进行下一步操作 图6 代码生成设置 点击其中的”Build type“，其中有以下几种类型可选，通常我们 选择第一项。 图7 build type 其中的”Hardware Board“选项点击后可根据实际硬件需求来选择。举例如图8： 图8 硬件选择 点击图中的”more settings“，可进入代码生成选项窗口。 图9 代码生成窗口 选项”Paths“是选择代码生成的位置 如图10中，第二选项”Speed”则包含数据溢出等保护函数，建议不勾选。 图10 Speed 图11中，其中”Memory“选项与处理器的能力相关，其中第一个选项框与不定长的数组有关，嵌入式开发最好不选，第二个选项则与处理器的堆栈有关，要根据处理器的堆栈大小来设置。 图11 Memory 图12中，选项“CodeAppearance”与代码生成的风格有关，其中的“comments”部分建议勾选”MATLAB source codeas comments“，方便代码的可读性。其他保持默认设置。 图12 Code appearance 图13中，在”Custom Code“的设置中，“Standard math library”其中的选择C89/C90，在“Code replace library”中可以选择ARMCortex-M3，实际上我们用的STM32F7系列的内核已经为ARMCortex-M7，但是并没有此选项。 图13 硬件选择 最后设置完成后，点击“GENERATE”，无错误成功后为如下界面，其中的主函数为测试函数，并不执行具体的计算，其中的initialize 函数为参数初始化函数，为空函数，可以自行添加相关初始化程序。 图14 代码生成成功后预览图","link":"/blog-cn/9434ba0b/11-Matlab-Simulink%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%9001/"},{"title":"13-高效使用simulink","text":"1 、新建一个simulink模型 2、进入simulink启动页面 3、新建空白的simulink（或打开simulink模板进行simulink搭建，如果公司有的话） 4、搭建模型如下 5、添加区域注释 Simulink支持多语言注释 6、创建子系统 双击进入子系统 设置为原子子系统 7、仿真添加scope鼠标放到输出信号线上右击依次选择 保存模型 运行仿真 仿真效果（仿真效果并不好） 在simulink中进行PID参数设计 在回去仿真看一下仿真结果（调整后的响应曲线） 更直观的看测试信号，添加Dashboard Scope 双击模块关联信号 仿真测试 记录数据在SDI中 8、Simulink项目管理 向工程添加文件 在文件control_system.slx上点击右键添加标签 SVN源代码托管工具 9、控制系统离散化 Controller &amp; Transfer Fcn 离散化后仿真结果 利用PID自动调节模块重新调节参数 重新调节参数后仿真结果 参考模型 点击转换 转换完成后Controller子系统图框发生了改变 10、数据管理 建立数据字典 SIL 不勾选Generate code only /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// 利用数据对象管理数据 代码生成设置 保存数据为*.mat文件 保存数据为*.m文件 运行*.m文件 代码生成设置 检查模型及模型配置 检查结果 自动修改参数 函数名设置 生成代码结果 子系统设置成原子系统（模型边框变黑） 子系统单独生成代码 库模块设置 先设置成Treat as atomic unit 然后在设置Code Generation 使用Variant Subsystem模块","link":"/blog-cn/181b6a48/13-%E9%AB%98%E6%95%88%E4%BD%BF%E7%94%A8simulink/"},{"title":"15-在Simulink中创建自己的Library01","text":"库添加到 Library Browser 中 此示例说明如何创建模块库，并将其添加到Simulink® Library Browser 中。此示例还显示如何添加子库。 您可以创建函数 slblocks，以指定与您的库相关的信息。您可以将此函数另存为 .m 或 .mlx 文件。但不能另存为P 代码文件。 在 Simulink Start Page上，选择 Blank Library 并点击 Create Library。 向库中添加一个 Gain 模块和一个 Subsystem 模块。从子系统中删除输入端口和输出端口。 将 Subsystem 模块命名为 My Sublibrary。要将其链接到一个子库，请在 MySublibrary 属性中，将 OpenFcn 回调设置为 mylib2。 ./media/image1.png 在MATLAB® 命令提示符下，输入以下命令以启用模型属性 EnableLBRepository。当您保存库时，只有此属性设置为on，您的库才会出现在浏览器中。 set_param(gcs,’EnableLBRepository’,’on’); 将库保存到 MATLAB 路径上的文件夹中。对于本示例，将库命名为 mylib。 创建另一个库 mylib2，并向其中添加一些模块。 在 MATLAB 命令提示符下，为新库启用模型属性 EnableLBRepository。 set_param(gcs,’EnableLBRepository’,’on’); 将 mylib2 保存到与 mylib 相同的文件夹中。 如果需要，您可以关闭这两个库。 在 MATLAB 中，右键点击您保存库的文件夹，并选择 NewFile &gt; Script。将文件命名为 slblocks.m。 打开 slblocks.m。将此函数添加到其中并保存。 function blkStruct = slblocks % This function specifies that the library should appear % in the Library Browser % and be cached in the browser repository Browser.Library = ‘mylib’; % ‘mylib’ is the name of the library Browser.Name = ‘My Library’; % ‘My Library’ is the library name that appears % in the Library Browser blkStruct.Browser = Browser; 在 Library Browser 中，执行刷新操作以查看新库和子库。右键点击库列表并选择 Refresh Library Browser。 下图显示了示例库 mylib，它在 Library Browser 中的名称为 My Library。 ./media/image2.png 由于您创建的回调，点击 My Sublibrary 将显示 mylib2 库的内容。 注意如果您保存库时没有将 ‘EnableLBRepository’ 设置为 ‘on’，Library Browser 的顶部将显示一条消息。 请点击 Fix 并根据提示进行操作。 指定库列表中的库顺序您可以通过向 MATLAB路径中添加一个 sl_customization.m 文件并为您的库设置排序优先级，从而指定您的库相对于列表中其他库的顺序。例如，要让您的库出现在列表的顶部，可以将排序优先级设置为 -2。默认情况下，Simulink库的排序优先级为 -1。其他库的排序优先级默认为 0，这些库显示在 Simulink库的下面。排序优先级相同的库按字母顺序显示。 以下示例文件 sl_customization.m 的内容将新库放置在库列表的顶部。 function sl_customization(cm) % Change the order of libraries in the Simulink Library Browser. cm.LibraryBrowserCustomizer.applyOrder({‘My Library’,-2}); end 要使自定义设置立即生效，请在命令提示符下输入： sl_refresh_customizations","link":"/blog-cn/210dcc39/15-%E5%9C%A8Simulink%E4%B8%AD%E5%88%9B%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84Library01/"},{"title":"16-创建受保护模型","text":"说明如何创建受保护模型，以进行只读模式的查看、仿真或代码生成。* 打开您的模型。此示 例使用 sldemo_mdlref_basic 进行演示。 在 Simulink Editor中，对于您要为其生成受保护模型代码的模型，右键点击引用该模型的模型模块。在此示例中，右键点击 CounterA。 从上下文菜单中选择 Block Parameters (ModelReference)。 在 Block Parameters 对话框的 Modelname 字段中指定该模型的扩展名 .slx。如果该模型和受保护模型在同一个文件夹中，则 .slxp 优先于 .slx。在 Modelname 字段中，如果您不指定扩展名，则该模型中的原始模型模块将成为受保护对象。 点击 OK。 右键点击模型模块。从上下文菜单中，选择 Subsystem &amp; ModelReference &gt; Create Protected Model for Selected Model Block。 ./media/image2.png 在 Create Protected Model 对话框中，选中 Simulate 和 Use generatedcode 复选框。如果要为受保护模型的功能设置密码保护，请输入至少包含四个字符的密码。每个功能可以有一个唯一的密码。 如果您拥有 Embedded Coder® 许可证，并为模型指定了基于 ERT的系统目标文件（例如 ert.tlc），Codeinterface 字段将处于可见状态。从 Codeinterface 下拉列表中选择以下选项之一： “Model reference” -通过模型引用代码接口指定代码访问，允许在模型引用层次结构中使用受保护模型。受保护模型的用户可以从包含受保护模型的父模型中生成代码。此外，用户可以使用受保护模型运行 Model 模块SIL/PIL 仿真。 “Top model” -通过独立的接口指定代码访问。受保护模型的用户可以使用受保护模型来运行 Model 模块SIL/PIL 仿真。 注意 在此示例中，sldemo_mdlref_basic 未指定基于 ERT 的系统目标文件，因此 Create Protected Model 对话框中的 Code interface 选项不可用。 从 Content type 列表中选择 “Obfuscated sourcecode”，以隐藏受保护模型的源代码目的和逻辑。 在 Create protected modelin 字段中，指定受保护模型的文件夹路径。默认值为当前工作文件夹。 要为受保护模型创建框架模型，请选中 Create harness model for protectedmodel 复选框。 点击 Create。将打开一个无标题框架模型。其中包含一个模型模块，该模块引用受保护模型 sldemo_mdlref_counter.slxp。Model 模块的 Simulationmode 设置为 “Accelerator”。您不能更改此模式。 ./media/image3.png 要查看受保护模型报告，请右键点击 CounterA 模块上的受保护模型徽章图标，然后选择 DisplayReport。 ./media/image5.png","link":"/blog-cn/bbc36fda/16-%E5%88%9B%E5%BB%BA%E5%8F%97%E4%BF%9D%E6%8A%A4%E6%A8%A1%E5%9E%8B/"},{"title":"17-创建Reference-Model","text":"建Reference Model 1、右键选择由subsystem转成reference mod el 2、初始化…. 3、填写新模型名字点击Apply 4、点击Convert 5、点击Fix 6、点击Continue 7、生成Reference Model","link":"/blog-cn/bee46678/17-%E5%88%9B%E5%BB%BAReference-Model/"},{"title":"18-在Simulink中创建封装子系统","text":"ATLAB/simulink模块的封装 今天重新回到MATLAB/simulink，介绍 的是关于模块的封装的介绍。 首先搭建一个简单的模型： 全选，点击右键，create subsystem from selection。 然后选中subsystem点击右键，选择mask-create mask 出现下面的面板 第一个部分是Icon&amp;port是做表面的修饰的，比如加上图啦，文字这些，暂时不看，看第二部分parameters&amp;dialog，点击左边的Edit（编辑），然后在蓝色的框中填上参数以及参数名。搭建的模型中参数有te，constant，J这三个部分；那么先编辑参数te设计参数名为torque；编辑参数J，设计参数名为JJ；如下图所示 现在就可以点击OK看一下外观 就可以设计参数了。现在还有一个constant没有设计，咱们可以在第三部分Initiation做一个初始化。 第四部分的Documentation是编辑参数框的，比如照如下编辑 点击OK，然后打开看一下参数框 设计torque为3，JJ为2. 然后在输入端口a和b分别输入常数10和20； 结果是1033，咱们可以验算一下： a和b输入到模块中，（a/te+15*te/J）*J*b=（10/5+15*3/2）*2*20=1033.满足了。 关于第一部分，就是Icon&amp;port可以举一个例子 Icon&amp;ports修饰的效果如下图","link":"/blog-cn/e802f2d8/18-%E5%9C%A8Simulink%E4%B8%AD%E5%88%9B%E5%BB%BA%E5%B0%81%E8%A3%85%E5%AD%90%E7%B3%BB%E7%BB%9F/"},{"title":"19-改善Simulink模型布局","text":"善模型布局 要改善图表的布局和外观，请在“ 格式”选项卡中单击“ 自动排列”。此 选项： 从输入开始到输出结束，从左到右对齐模型中的块。 调整块（例如，常量块）的大小以显示长参数值。 标准化相似块之间的块大小。 通过移动块拉直信号线。 或者，您可以尝试改善信号线的形状。要尝试改善单条线的形状，请选择它，然后从操作栏中选择自动布线。如果可以在模型元素之间建立更好的路线，则该线会重画。 您可以尝试使用自动布线改善多条线。要从操作栏中访问“ 自动布线”，请使用拖动框选择一个块或多个模型元素。 改善前 自动布局后","link":"/blog-cn/ff70442f/19-%E6%94%B9%E5%96%84Simulink%E6%A8%A1%E5%9E%8B%E5%B8%83%E5%B1%80/"},{"title":"2-SIL-PIL-HIL","text":"SIL、PIL和HIL* 什么是SIL和PIL模拟？随着嵌入式编码®，您可以运行 软件在环（SIL）和处理器在环（PIL）模型的模拟。这些模拟生成顶级模型或模型的一部分的源代码。一个SIL模拟编译并运行在开发计算机上生成的代码。PIL仿真在开发计算机上交叉编译源代码，然后在目标处理器或等效指令集模拟器上下载并运行目标代码。 通过SIL和PIL模拟，您可以： 测试您的模型和生成的代码是否在数值上等效。 观察代码覆盖率。 执行代码执行分析。 为什么使用SIL和PIL通过SIL和PIL，您可以尽早测试并修复缺陷。例如，您可以在正常模式下建模和测试系统组件。然后，您可以在运行已编译生成的代码的SIL或PIL模拟中重用测试套件。要检查数值等效性，可以比较法线和SIL或PIL模拟结果。你从而避免留下的Simulink ®环境，在一个单独的基础设施测试生成的代码。 此表描述了可以使用SIL和PIL的情况。 情况 使用 测试模型和生成的代码之间的数值等价。请参阅使用SIL和PIL仿真测试生成的代码。 SIL和PIL 重用为正常模式仿真开发的测试向量，以验证生成（或传统）代码的数字输出。例如： SIL和PIL 收集生成代码的指标： SIL和PIL 获得IEC 61508，IEC 62304，ISO 26262或DO-178认证。请参阅IEC认证套件参考工作流程概述（DO认证工具包）。 SIL和PIL 没有目标硬件，可以方便地替代PIL。 SIL 使用目标硬件，例如评估板或指令集模拟器： PIL 重用Simulink DesignVerifier™生成的测试用例。请参阅什么是测试用例生成？（SimulinkDesign Verifier）。 使用SimulinkTest™执行等效性测试。请参阅测试两个等效模拟（Simulink测试）。 代码覆盖率。请参阅代码覆盖率。 执行分析。请参阅使用SIL和PIL 执行代码执行概要分析 验证特定于目标的代码的行为，例如，代码替换优化和遗留代码。请参阅什么是代码替换？。 优化代码的执行速度和内存占用。在此表中，请参阅有关收集执行概要分析和堆栈概要分析指标的信息。 调查的编译器设置和优化，例如，从偏差影响 ANSI ® Ç溢出行为。 正常模拟技术不考虑硬件施加的限制和要求，例如有限的存储器资源或特定于目标的优化代码的行为。 有关在特定目标上运行PIL模拟的信息，请参阅示例自定义目标（SimulinkCoder）。 注意该SIL和PIL仿真模式不适合的模型仿真时间的减少。如果要加速模型的模拟，请使用快速加速器模式。有关更多信息，请参阅什么是加速？（SIMULINK）。 如何SIL和PIL模拟工作在SIL或PIL仿真中，将为顶部模型或模型的一部分生成代码。使用SIL，此代码将在您的开发计算机上编译和执行。使用PIL，代码将针对目标硬件进行交叉编译，并在目标处理器上运行。 通过通信通道，Simulink可以针对模拟的每个采样间隔向计算机或目标处理器上的代码发送激励信号。 对于顶级模型，Simulink使用来自基础或模型工作空间的刺激信号。 如果您仅指定模型的一部分在SIL或PIL模式下进行模拟，则模型的一部分将保留在Simulink中，并且不会为模型的这一部分生成代码。通常，您可以配置模型的这一部分，以便为在硬件上执行的软件提供测试向量。模型的这一部分可以表示算法的其他部分或算法运行的环境。 当您的计算机或目标处理器从Simulink接收信号时，处理器会执行一个样本步骤的SIL或PIL算法。所述SIL或PIL算法返回在此步骤中计算出通过通信信道来的Simulink输出信号。模拟的一个采样周期完成，Simulink进入下一个采样间隔。该过程不断重复，模拟进展。SIL和PIL模拟不会实时运行。在每个采样周期中，Simulink和目标代码交换I/ O数据。 SIL和PIL模拟的比较 SIL或PIL模拟的类型 SIL模拟中会发生什么 PIL仿真中会发生什么 指定通过： 在开发计算机上测试生成的源代码的行为。模拟不测试为目标硬件编译的代码，因为代码是为开发计​​算机编译的（不同的编译器和不同于目标的处理器体系结构）。 在实际目标硬件或指令集模拟器上测试要在生产中部署的对象代码。 使用从子系统创建的SIL或PIL块。 Simulation通过S-function运行编译的目标代码。S-function与作为开发计算机上的独立应用程序执行的目标代码进行通信。SIL块执行独立于MATLAB过程。 Simulation通过开发计算机上的S-function运行交叉编译的目标代码。S-function与目标处理器或指令集模拟器上作为独立应用程序执行的目标代码进行通信。 顶级模拟模拟 模型块模拟模式参数 生成的产品代码编译和开发计算机作为独立的进程，独立MATLAB对执行®过程。 执行是主机/主机和非实时时间。 在开发计算机上，为目标交叉编译生成的生产代码。在目标处理器或指令集模拟器上下载并执行的目标代码。 执行是主机/目标和非实时时间。 执行是主机/主机和非实时时间。 执行是主机/目标和非实时时间。 SIL和PIL的代码接口例如，在为单个可部署组件执行顶级模型或右键单击子系统构建时，可以生成独立代码。您可以编译独立代码并将其链接到独立可执行文件或将其与其他代码集成。有关独立代码接口的更多信息，请参阅为模型入口点函数配置代码生成（SimulinkCoder）。 为引用的模型层次结构生成代码时，软件会为顶层模型生成独立的可执行代码，并为每个引用的模型生成称为模型引用目标的库模块。代码执行时，独立的可执行文件调用适用的模型引用目标来计算引用的模型输出。有关更多信息，请参阅构建模型参考目标（SimulinkCoder）。 要将生成的代码与遗留代码集成，请使用独立代码，因为记录了独立代码接口。 注意SIL和PIL模拟不提供对自定义代码接口的直接支持。您可以将这些接口作为S函数合并到Simulink中，例如，使用旧版代码工具，S函数构建器或手写代码。然后，您可以使用SIL和PIL模拟验证自定义代码。 此表提供SIL和PIL仿真生成的接口。 SIL / ARROW模拟 代码接口 超模 SIL / PIL仿真生成独立代码接口。如果代码存在，则模拟会调用模型的独立代码。如果代码不存在，则模拟会生成独立代码。 模型块 如果将Code interface block参数设置为Top model，则SIL / PIL仿真会生成独立的代码接口。模拟调用模型的独立代码（如果存在）。否则，模拟使用 命令生成独立代码 。slbuild(‘model‘) 如果将Code interface block参数设置为Model reference，则SIL / PIL仿真会生成模型参考代码接口。模拟电话模型参考目标模型块，如果它的存在。否则，仿真使用命令生成模型参考目标 。slbuild(‘model‘, ‘ModelReferenceCoderTargetOnly’) SIL或PIL块 Block使用独立代码接口。 计划注意事项 项目 信息 代数循环 SIL和PIL模拟中存在代数循环，但在正常模式模拟中不存在： 反馈循环中导出的函数 如果您的模型具有函数调用子系统并导出具有上下文相关输入的子系统（例如，反馈信号），则使用生成的代码进行SIL / PIL仿真的结果以及模型的正常模式仿真结果可以有所不同 使SIL / PIL和正常模式模拟产生相同结果的一种方法是在模型中使用函数调用反馈锁存块。您可以使依赖于上下文的输入变为与上下文无关。 如果将配置参数 &gt; 诊断 &gt; 连接 &gt; 依赖于上下文的输入设置为以下之一，则嵌入式编码器会生成警告，以识别导出的函数调用子系统的上下文相关输入： 代码生成优化中的单输出/更新功能可以引入代数循环，因为该选项通过组合输出和更新功能引入直接馈通。 单输出/更新功能与最小化代数循环出现不兼容（在子系统参数对话框和配置参数 &gt; 模型引用窗格中）。最小化代数循环发生允许代码生成通过在输出和更新函数之间划分生成的代码来移除代数循环，以避免直接馈通。 如果为虚拟子系统生成代码，则代码生成会将子系统视为原子并相应地生成代码。生成的代码可以更改模型的执行行为，例如，通过应用代数循环，并为模拟行为引入不一致。 要为模型启用一致的模拟和执行行为，请将虚拟子系统声明为原子子系统。 有关更多信息，请参阅： 代数循环概念（Simulink） 代数循环（SimulinkCoder） 控制子系统功能的生成（SimulinkCoder） Enable all as warnings Use local settings Disable all 有关更多信息，请参阅： 控制子系统功能的生成（SimulinkCoder） 功能 -呼叫反馈锁存器 依赖于上下文的输入（Simulink） 导入的数据和函数定义 导入的数据 GetSet 自定义存储类 自定义存储类型 Other AUTOSAR运行时环境（RTE） 导入的数据在SIL和PIL模拟中，您可以使用信号，参数和数据存储来指定具有导入数据定义的存储类。模拟定义与以下相关联的导入数据的存储： 组件根级别的信号（在I / O边界上）。 基础工作空间或数据字典中的参数。对于模型工作空间中的参数： 顶级SIL / PIL和SIL / PIL块模拟定义存储。 模型块SIL /PIL模拟不定义存储。您必须定义存储并指定与MATLAB值匹配的初始值。 全球数据存储。 SIL和PIL模拟不为其他导入数据定义存储。例如，模拟不会为与以下内容关联的导入数据定义存储： 内部信号（不在I / O边界上） 本地数据存储 在这些情况下，通过被测组件或PIL rtw.pil.RtIOStreamApplicationFrameworkAPI 包含的自定义代码定义存储。 另请参见可调参数和SIL /PIL。 GetSet 自定义存储类SIL和PIL模拟支持GetSet自定义存储类。所述SIL /PIL测试工具提供的C-定义 Get和Set所仿真期间使用的功能。有关更多信息，请参阅使用自定义存储类GetSet访问数据。 自定义存储类型 Other要为Type设置为的自定义存储类启用SIL和PIL支持，请为自定义存储类 创建自定义属性类，并将自定义属性类与布尔属性关联，设置为 。OtherSupportSILPILtrue classdef CSCOtherAttributes &lt;Simulink.CustomStorageClassAttributes 属性（PropertyType =’逻辑标量’） SupportSILPIL = true; 结束 结束 有关自定义属性的详细信息，请参阅通过编写TLC代码进一步自定义生成的代码。 为了构建SIL或PIL应用程序接口，代码生成器调用关联的自定义TLC文件中的 DataAccess和ClassAccess函数以获取所需信息。代码生成器将提取的信息存储在构建文件夹中的构建工件中。 对于未分组的自定义存储类： 代码生成器调用DataAccess与考虑的值的请求参数define， declare，layout， contents，address，或 set。 代码生成器使用返回的字符串 DataAccess(record, “define”, “”,“”)来定义SIL或PIL应用程序中的变量，如果其中一个为真： 信号或参数具有 Imported数据范围。 该模型使用模型参考代码接口。 该模型使用一个顶部模型码接口， EnableDataOwnership是 on和 Owner用于自定义存储类属性不为空并且不等于当前的模型的名称 如果满足以下条件，则代码生成器使用返回的字符串 DataAccess(record, “declare”,“”, “”)在SIL或PIL应用程序中声明变量： 该模型使用顶级模型代码接口。 信号或参数使用 Exported存储类。 EnableDataOwnership是 off，或者 EnableDataOwnership是 on与 Owner自定义存储类属性是空的或者等于所述型号名称。 配置代码打包，以便未声明变量 model.h 或包含的头文件 model.h 对于分组的自定义存储类： 代码生成调用DataAccess与 request的参数取值 layout，address或 set。 代码生成器调用ClassAccess带有request值的 参数 groupTypeDeclDefn。 如果其中一个为真，则必须提供分组的type（struct）定义和extern分组变量的声明： 信号或参数具有 Imported数据范围。 该模型使用模型参考代码接口。 该模型使用一个顶部模型码接口， EnableDataOwnership是 on和 Owner用于自定义存储类属性不为空并且不等于当前的模型的名称 通过使用HeaderFile通过model.h文件包含的属性或自定义代码， 在与自定义存储类关联的头文件中提供定义和声明 。要在SIL或PIL应用程序中定义变量，代码生成器使用返回的字符串ClassAccess(record,“groupTypeDeclDefn”)。 静态初始化可以假定 struct元素的顺序与数据范围所生成的顺序不同 Exported。当代码生成器进行查询时 ClassAccess(record,“groupTypeDeclDefn”)，它会使用该值临时覆盖自定义存储类的数据初始化属性None。 要确定SIL或PIL应用程序是否可以按地址访问代码中的变量，代码生成器将使用返回的元素 DataAccess(record,“layout”, “”,“”)。要在应用程序中创建在开发计算机和目标硬件之间传输输入或输出端口，可调参数或全局数据存储内存值的功能，代码生成器使用以下输出： DataAccess(record, “address”, idx,reim)如果第一返回元件是scalar， vector，row-mat，或 col-mat。 DataAccess(record, “contents”, idx, reim)（或 DataAccess(record, “set”, idx,reim)）如果第一个返回的元素是other。 代码生成器假定for row-mat和 col-mat，矩阵分别以行主格式存储。该假设与模型其余部分的阵列布局无关。代码生成器假定如果自定义存储类实现的存储的阵列布局与模型的其余部分不同，则与自定义存储文件关联的TLC文件将执行所需的转换。 您可以构造与自定义类型的存储类关联的自定义TLC文件，Other以执行其他功能（除了返回请求的代码片段）。例如，直接写入自定义文件或调用更改基本工作空间状态的MATLAB函数。如果您不总是希望在调用DataAccess或ClassAccess调用时执行这些函数 ，请使用LibIsAccessingCustomDataForSILPIL(record)TLC函数来区分目标代码生成和构建SIL或PIL应用程序的代码片段请求。例如： … ％case“内容” ％if！LibIsAccessingCustomDataForSILPIL（记录） ％matlab functionWithSideEffects（） ％endif ％return LibDefaultCustomStorageContents（record，idx，reim） … 另请参阅其他自定义存储类限制。 AUTOSAR运行时环境（RTE）您可以使用顶级模型和模块块SIL / PIL和SIL /PIL块模拟来执行AUTOSAR软件组件的基于模型的测试。生成的AUTOSAR软件组件代码与基本组件特定的AUTOSAR运行时环境（RTE）链接，以创建测试应用程序。此应用程序测试AUTOSAR软件组件进行的AUTOSARAPI调用。 注意对于模块块SIL / PIL，要测试AUTOSAR接口，请将Code接口块参数设置为 Top model。 有关更多信息，请参阅使用SIL和PIL 验证AUTOSAR C或C++代码（AUTOSARBlockset）。 ////////////////////////////////////////HIL/////////////////////////////////////// 什么是硬件在环仿真？此示例使用： 的Simscape Simulink Coder Simulink实时 硬件在环（HIL）仿真是一种实时仿真。您可以使用HIL仿真来测试控制器设计。 HIL仿真显示您的控制器如何实时响应逼真的虚拟刺激。您还可以使用HIL确定您的物理系统（工厂）模型是否有效。 在HIL仿真中，您使用实时计算机作为工厂模型的虚拟表示和控制器的真实版本。该图显示了典型的HIL仿真设置。台式计算机（开发硬件）包含控制器和工厂的实时模型。开发硬件还包含一个接口，用于控制工厂的虚拟输入。控制器硬件包含从控制器模型生成的控制器软件。实时处理器（目标硬件）包含从工厂模型生成的物理系统的代码。 为什么要进行硬件在环仿真？在执行基于模型的设计（MBD）时，使用HIL仿真来测试控制器的设计。该图显示了 HIL仿真适用于MBD设计到实现工作流程的位置。 验证涉及使用实际工厂硬件在实际情况下或在环境代理中测试您的控制器（例如，压力室）。在HIL仿真中，您不必为物理系统（工厂）使用真实硬件。您也不必依赖自然或环境测试设置。通过允许您使用模型来表示工厂，HIL仿真在成本和实用性方面具有优势。 HIL仿真有几个领域可以比验证测试节省成本。 对于设计更改，HIL仿真往往更便宜。您可以 在MBD工作流程中比验证更早地执行HIL仿真，这样您就可以在项目早期识别并重新设计问题。尽早发现问题包括以下好处： 您的团队更有可能批准更改。 实施设计变更的成本较低。 在调度方面，HIL仿真比验证更便宜，更实用，因为您可以将其设置为独立运行。 对于测试控制器对异常事件的响应，HIL仿真比验证更实用。例如，您可以模拟地震或暴风雪等极端天气状况。您还可以测试您的控制器如何响应在深海或深空等难以接近的环境中发生的刺激。","link":"/blog-cn/d368811c/2-SIL-PIL-HIL/"},{"title":"23-m脚本文件保护","text":"脚本文件保护 一、在MATLAB命令窗口输入如下命令： &gt;&gt;pcode *.m 生成\\ *.p的脚本保护文件 二、如何使用*.p文件 在MATLAB命令窗口输入 &gt;&gt; run *.p ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// 构建 P 代码文件要生成 P 代码文件，请在 MATLAB 命令行窗口中输入以下命令： pcode file1 file2, … 该命令生成文件 file1.p、file2.p 等。要将当前文件夹中的所有 .m 源文件转换为 P代码文件，请使用以下命令： pcode *.m","link":"/blog-cn/910c13dd/23-m%E8%84%9A%E6%9C%AC%E6%96%87%E4%BB%B6%E4%BF%9D%E6%8A%A4/"},{"title":"28-从模型创建工程","text":"模型创建工程创建一个工程以组织您的模型和任何依存文件。使用 ** Create Project fromModel** 对您的顶层模型运行依存关系分析，以识别必需的文件。 提示如需可为您自动执行更多步骤的更简单选项，请参阅从文件夹创建新工程。 您可以基于工程来组织工作和进行团队协作。通过 Simulink 工程，您可以完成以下工作： 找到您需要的所有文件 管理和共享文件、设置和用户定义的任务 与源代码管理交互。 在 Simulink® 模型中，选择 File &gt; Project &gt; Create Project fromModel。 Simulink 对您的模型运行依存关系分析，以识别必需的文件和包含所有依存关系的工程根位置。 在 New Project 对话框中，编辑要更改的任何设置： Project name -默认情况下为建议的工程根文件夹的名称。如果需要，可对其进行编辑。 Project folder -依存关系分析标识的包含所有依存项的文件夹。如果需要，可点击以另外选择一个位于文件系统层次结构中文件系统根文件夹和模型文件夹之间的文件夹。 Files to include -要包含在工程中的文件。带有选中复选框的文件是由依存关系分析标识出的文件。可以通过选中对应复选框来指定要包括的文件。 任何外部依存关系均会列出。如果所需的文件位于工程根目录之外，则您不能将这些文件添加到工程中。如果文件在您的路径上，但它是不属于您的工程的实用工具或其他资源，则外部依存关系可能不会指示存在问题。 如果您不想创建指向顶层文件的快捷方式，或不想将所有文件夹添加到工程路径，请在 MoreOptions 下清除复选框。您也可以稍后编辑这些工程设置。 点击 Create 以创建包含您的模型和任何其他指定文件的工程。","link":"/blog-cn/9fa1f654/28-%E4%BB%8E%E6%A8%A1%E5%9E%8B%E5%88%9B%E5%BB%BA%E5%B7%A5%E7%A8%8B/"},{"title":"36-获取参数名称和值命令get-param使用方法","text":"et_param获取参数名称和值 语法[ParamVa lue =get_param(Object,Parameter)](https://ww2.mathworks.cn/help/simulink/slref/get_param.html#d118e236724) 说明ParamValue =get_param(Object 返回指定模型或模块对象的指定参数的名称或值。首先打开或加载Simulink® 模型。 提示如果您对同一个模块多次调用 get_param，则使用数值句柄指定模块比使用完整的模块路径更高效。使用 getSimulinkBlockHandle 获取模块句柄。 对于参数名称，请参阅： 模型参数 模块特定的参数 通用模块属性 示例获取模块参数值和模型参数值加载 vdp 模型。 load_system(‘vdp’); 获取 Expression 模块参数的值。 BlockParameterValue = get_param(‘vdp/Fcn’,’Expression’) BlockParameterValue = 1 - u*u 获取 SolverType 模型参数的值。 SolverType = get_param(‘vdp’,’SolverType’) SolverType = Variable-step 获取根参数名称和值通过找出 Simulink 根参数名称与模型参数名称之间的区别，获取全局参数名称的列表。 RootParameterNames = fieldnames(get_param(0,’ObjectParameters’)); load_system(‘vdp’) ModelParameterNames = fieldnames(get_param(‘vdp’,’ObjectParameters’)); GlobalParameterNames = setdiff(RootParameterNames,ModelParameterNames) GlobalParameterNames = ‘AutoSaveOptions’ ‘CacheFolder’ ‘CallbackTracing’ ‘CharacterEncoding’ . . . ‘CurrentSystem’ 获取全局参数的值。 GlobalParameterValue = get_param(0,’CurrentSystem’) GlobalParameterValue = vdp 获取模型参数名称和值获取 vdp 模型的模型参数列表。 load_system(‘vdp’) ModelParameterNames = get_param(‘vdp’,’ObjectParameters’) ModelParameterNames = Name: [1x1 struct] Tag: [1x1 struct] Description: [1x1 struct] Type: [1x1 struct] Parent: [1x1 struct] Handle: [1x1 struct] . . . Version: [1x1 struct] 获取 vdp 模型的 ModelVersion 模型参数的当前值。 ModelParameterValue = get_param(‘vdp’,’ModelVersion’) ModelParameterValue = 1.6 获取所有模块和一个参数值获取 vdp 模型的模块路径和名称列表。 load_system(‘vdp’) BlockPaths = find_system(‘vdp’,’Type’,’Block’) BlockPaths = ‘vdp/Fcn’ ‘vdp/More Info’ ‘vdp/More Info/Model Info’ ‘vdp/Mu’ ‘vdp/Mux’ ‘vdp/Product’ ‘vdp/Scope’ ‘vdp/Sum’ ‘vdp/x1’ ‘vdp/x2’ ‘vdp/Out1’ ‘vdp/Out2’ 获取 Fcn 模块的模块对话框参数列表。 BlockDialogParameters = get_param(‘vdp/Fcn’,’DialogParameters’) BlockDialogParameters = Expr: [1x1 struct] SampleTime: [1x1 struct] 获取 Expr 模块参数的值。 BlockParameterValue = get_param(‘vdp/Fcn’,’Expr’) BlockParameterValue = 1 - u*u 使用模块句柄获取模块参数值如果您对同一个模块多次调用 get_param，则使用模块句柄比以字符向量形式指定完整模块路径（例如，’vdp/Fcn’）更高效。 您可以在对 get_param 或 set_param 的后续调用中使用该模块句柄。如果您检查该句柄，会发现它包含双精度值。不要试图只使用句柄的数值（例如 5.007），因为您通常需要指定的位数远远超过MATLAB® 显示的位数。而要将该句柄赋给变量，并使用该变量名称指定模块。 如果需要，可以使用 getSimulinkBlockHandle 来加载 vdp 模型（通过指定 true），并获取 FCN 模块的句柄。 fcnblockhandle = getSimulinkBlockHandle(‘vdp/Fcn’,true); 将模块句柄用于 get_param 以获取 Expr 模块参数的值。 BlockParameterValue = get_param(fcnblockhandle,’Expression’) BlockParameterValue = 1 - u*u 显示模型中所有模块的模块类型获取 vdp 模型的模块路径和名称列表。 load_system(‘vdp’) BlockPaths = find_system(‘vdp’,’Type’,’Block’) BlockPaths = ‘vdp/Fcn’ ‘vdp/More Info’ ‘vdp/More Info/Model Info’ ‘vdp/Mu’ ‘vdp/Mux’ ‘vdp/Product’ ‘vdp/Scope’ ‘vdp/Sum’ ‘vdp/x1’ ‘vdp/x2’ ‘vdp/Out1’ ‘vdp/Out2’ 获取 vdp 模型中每个模块的 BlockType 参数值。 BlockTypes = get_param(BlockPaths,’BlockType’) BlockTypes = ‘Fcn’ ‘SubSystem’ ‘SubSystem’ ‘Gain’ ‘Mux’ ‘Product’ ‘Scope’ ‘Sum’ ‘Integrator’ ‘Integrator’ ‘Outport’ ‘Outport’ 输入参数Object - 模型、模块或根的名称或句柄句柄 | 字符向量 | 字符向量元胞数组 | 字符串数组 | 0 模型、模块或根的句柄或名称，指定为数值句柄或字符向量；对于多个模块，则为字符向量元胞数组；对于根，则为 0。数值句柄必须为标量。您还可以获取信号线和端口的参数，但必须使用数值句柄指定它们。 提示如果您对同一个模块多次调用 get_param，则使用数值句柄指定模块比使用完整的模块路径更高效。使用 getSimulinkBlockHandle 获取模块句柄。不要试图只使用句柄的数值（例如 5.007），因为您通常需要指定的位数远远超过MATLAB 显示的位数。要将句柄赋给变量，并使用该变量名称指定模块。 指定 0 以获取根参数名称，包括当前 Simulink 会话的全局参数和模型参数。 全局参数包括编辑器预设和 Simulink Coder™ 参数。 模型参数包括配置参数、Simulink Coder 参数和 Simulink Code Inspector™ 参数。 *示例： *‘vdp/Fcn’ Parameter - 模型、模块或根的参数字符向量 | 字符串标量 模型、模块或根的参数，指定为字符向量，对于根，则为 0。下表显示了特殊情况。 指定的参数 结果 ‘ObjectParameters’ 返回一个结构体数组，指定的对象（模型、模块或根）的参数名称在结构体中为单独的字段。 ‘DialogParameters’ 返回一个结构体数组，模块对话框参数名称在结构体中为单独的字段。如果模块有封装，则函数返回封装参数。 参数名称，例如 ‘BlockType’。指定任何模型或模块参数，或模块对话框参数。 返回指定的模型或模块参数的值。 如果以元胞数组形式指定了多个模块，将返回一个元胞数组，其中包含所有模块都共有的指定参数的值。该元胞数组中所有指定的模块都必须包含该参数，否则函数将返回错误。 *示例： *‘ObjectParameters’ *数据类型： *char 输出参数ParamValue - 指定的模型、模块或根的指定参数的名称或值任何数据类型，具体取决于参数 指定的模型、模块或根的指定参数的名称或值。如果您指定多个对象，则输出是对象元胞数组。下表显示了特殊情况。 指定的参数 返回的参数值 ‘ObjectParameters’ 一个结构体数组，指定的对象（模型、模块或根）的参数名称在结构体中为单独的字段。 ‘DialogParameters’ 一个结构体数组，模块对话框参数名称在结构体中显示为单独的字段。如果模块有封装，则函数返回封装参数。 参数名称，例如 ‘BlockType’ 指定的模型或模块参数的值。如果以元胞数组形式指定了多个模块，将返回一个元胞数组，其中包含对所有模块都通用的指定参数的值。 如果您通过指定 get_param(0,’ObjectParameters’) 来获取根参数，则输出 ParamValue 是一个结构体数组，根参数名称在结构体中为单独的字段。每个参数字段都是一个结构体，其中包含以下字段： 类型 -参数类型值包括：’boolean’、’string’、’int’、’real’、’point’、’rectangle’、’matrix’、’enum’、’ports’ 或 ‘list’ 枚举 - 枚举字符向量值的元胞数组，仅适用于 ‘enum’ 参数类型 属性 -定义参数属性的字符向量元胞数组。值包括：’read-write’、’read-only’、’read-only-if-compiled’、’write-only’、’dont-eval’、 ‘always-save’、’never-save’、’nondirty’ 或 ‘simulation’","link":"/blog-cn/a4b7e55/36-%E8%8E%B7%E5%8F%96%E5%8F%82%E6%95%B0%E5%90%8D%E7%A7%B0%E5%92%8C%E5%80%BC%E5%91%BD%E4%BB%A4get-param%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/"},{"title":"43-如何解锁已经锁定的simulink模块","text":"何解锁已经锁定的simulink模块 关于simulink建模会遇到的问题,相信大家都会有 在网上找已经搭建好的模型的经历，但是很多资源下载后都会成一个被锁定的状态，如何解锁是一个新的问题。 被锁定的界面如下图所示： 如果想要解锁该模型，我们首先返回它的上一级，选择这个已经封装好的模型，并点击crtl+l建进行操作 会进入上图这个界面，选择open in newtab，最后进入到修改界面后拖动里面的物块，上面会有一个提示。最后点击提示里面的unlock按键，就能对物块模型进行修改了。","link":"/blog-cn/2cda876d/43-%E5%A6%82%E4%BD%95%E8%A7%A3%E9%94%81%E5%B7%B2%E7%BB%8F%E9%94%81%E5%AE%9A%E7%9A%84simulink%E6%A8%A1%E5%9D%97/"},{"title":"Idle-Speed-Control模块分析","text":"目录 [TOC] Idle Speed Control模块分析模块输入 输出 Idle Speed Control模块的输入输出该模块有两个输入（TrqCmdIn 、 EngSpd）及一个输出（TrqCmd） 其中TrqCmdIn为扭矩指令索引，EngSpd为发动机转速，TrqCmd为发动机需求扭矩指令 内部子模块Idle Speed Control模块内部子模块 子模块介绍Idle Speed Control子模块介绍1、比较模块 输入TrqCmdIn与Trq_idlecmd_enable比较，输出为boolean类型，如果为真则激活下面的Idle Speed Control模块， 其中const= 3 If Idle Speed Controller Trqcmd,input &lt; Trqidlecmd,enable Enabled Trqidlecmd,enable ≤ Trqcmd,input Not enabled 2、取最大值模块 两个输入数据比较输出较大的数据 3、Idle Speed Control子模块 当指令扭矩低于阈值时，怠速控制器调节发动机转速。（N_idle = 750） 怠速控制器使用离散PI控制器通过命令转矩来调节目标怠速。 PI控制器使用以下传递函数： 怠速指令扭矩必须小于最大指令扭矩： 在这些条件下，怠速控制处于活动状态。如果命令输入扭矩下降到启用怠速控制器的阈值以下则命令发动机扭矩由以下公式给出： 方程使用这些变量： Trqcmd Commanded engine torque Trqcmd,input Input commanded engine torque Trqidlecmd,enable Threshold for enabling idle speed controller Trqidlecmd Idle speed controller commanded torque Trqidlecmd,max Maximum commanded torque Nidle Base idle speed Kp,idle Idle speed controller proportional gain Ki,idle Idle speed controller integral gain","link":"/blog-cn/8d8fe56a/Idle-Speed-Control%E6%A8%A1%E5%9D%97%E5%88%86%E6%9E%90/"},{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post 1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/blog-cn/16107/hello-world/"},{"title":"PCB布线基本规范","text":"PCB板布局布线的基本规范 PCB又被称为印刷电路板(Printed CircuitBoard) ，它可以实现电子元器件间的线路连接和功能实现，也是电源电路设计中重要的组成部分。今天就将以本文来介绍PCB板布局布线的基本规则。 一、元件布局基本规则 按电路模块进行布局，实现同一功能的相关电路称为一个模块，电路模块中的元件应采用就近集中原则，同时数字电路和模拟电路分开; 2.定位孔、标准孔等非安装孔周围1.27mm 内不得贴装元、器件，螺钉等安装孔周围3.5mm(对于M2.5)、4mm(对于M3)内不得贴装元器件; 卧装电阻、电感(插件)、电解电容等元件的下方避免布过孔，以免波峰焊后过孔与元件壳体短路; 元器件的外侧距板边的距离为5mm; 贴装元件焊盘的外侧与相邻插装元件的外侧距离大于2mm; 6.金属壳体元器件和金属件(屏蔽盒等)不能与其它元器件相碰，不能紧贴印制线、焊盘，其间距应大于2mm。定位孔、紧固件安装孔、椭圆孔及板中其它方孔外侧距板边的尺寸大于3mm; 发热元件不能紧邻导线和热敏元件;高热器件要均衡分布; 8.电源插座要尽量布置在印制板的四周，电源插座与其相连的汇流条接线端应布置在同侧。特别应注意不要把电源插座及其它焊接连接器布置在连接器之间，以利于这些插座、连接器的焊接及电源线缆设计和扎线。电源插座及焊接连接器的布置间距应考虑方便电源插头的插拔; 9.其它元器件的布置：所有IC元件单边对齐，有极性元件极性标示明确，同一印制板上极性标示不得多于两个方向，出现两个方向时，两个方向互相垂直; 10、板面布线应疏密得当，当疏密差别太大时应以网状铜箔填充，网格大于8mil(或0.2mm); 11、贴片焊盘上不能有通孔，以免焊膏流失造成元件虚焊。重要信号线不准从插座脚间穿过; 12、贴片单边对齐，字符方向一致，封装方向一致; 13、有极性的器件在以同一板上的极性标示方向尽量保持一致。 二、元件布线规则1、画定布线区域距PCB板边≤1mm的区域内，以及安装孔周围1mm内，禁止布线; 2、电源线尽可能的宽，不应低于18mil;信号线宽不应低于12mil;cpu入出线不应低于10mil(或8mil);线间距不低于10mil; 3、正常过孔不低于30mil; 4、双列直插：焊盘60mil，孔径40mil;1/4W电阻：51*55mil(0805表贴);直插时焊盘62mil，孔径42mil;无极电容：51*55mil(0805表贴);直插时焊盘50mil，孔径28mil; 5、注意电源线与地线应尽可能呈放射状，以及信号线不能出现回环走线。 如何提高抗干扰能力和电磁兼容性? 在研制带处理器的电子产品时，如何提高抗干扰能力和电磁兼容性? 01下面的一些系统要特别注意抗电磁干扰： (1) 微控制器时钟频率特别高，总线周期特别快的系统。 (2) 系统含有大功率，大电流驱动电路，如产生火花的继电器，大电流开关等。 (3) 含微弱模拟信号电路以及高精度A/D变换电路的系统。 02为增加系统的抗电磁干扰能力采取如下措施： (1) 选用频率低的微控制器： 选用外时钟频率低的微控制器可以有效降低噪声和提高系统的抗干扰能力。同样频率的方波和正弦波，方波中的高频成份比正弦波多得多。虽然方波的高频成份的波的幅度，比基波小，但频率越高越容易发射出成为噪声源，微控制器产生的最有影响的高频噪声大约是时钟频率的3倍。 (2) 减小信号传输中的畸变 微控制器主要采用高速CMOS技术制造。信号输入端静态输入电流在1mA左右，输入电容10PF左右，输入阻抗相当高，高速CMOS电路的输出端都有相当的带载能力，即相当大的输出值，将一个门的输出端通过一段很长线引到输入阻抗相当高的输入端，反射问题就很严重，它会引起信号畸变，增加系统噪声。当Tpd&gt;&gt;Tr时，就成了一个传输线问题，必须考虑信号反射，阻抗匹配等问题。 信号在印制板上的延迟时间与引线的特性阻抗有关，即与印制线路板材料的介电常数有关。可以粗略地认为，信号在印制板引线的传输速度，约为光速的1/3到1/2之间。微控制器构成的系统中常用逻辑电话元件的Tr(标准延迟时间)为3到18ns之间。 在印制线路板上，信号通过一个7W的电阻和一段25cm长的引线，线上延迟时间大致在4~20ns之间。也就是说，信号在印刷线路上的引线越短越好，最长不宜超过25cm。而且过孔数目也应尽量少，最好不多于2个。 当信号的上升时间快于信号延迟时间，就要按照快电子学处理。此时要考虑传输线的阻抗匹配，对于一块印刷线路板上的集成块之间的信号传输，要避免出现Td&gt;&gt;Trd的情况，印刷线路板越大系统的速度就越不能太快。 用以下结论归纳印刷线路板设计的一个规则： 信号在印刷板上传输，其延迟时间不应大于所用器件的标称延迟时间。 (3) 减小信号线间的交互干扰： A点一个上升时间为Tr的阶跃信号通过引线AB传向B端。信号在AB线上的延迟时间是Td。在D点，由于A点信号的向前传输，到达B点后的信号反射和AB线的延迟，Td时间以后会感应出一个宽度为Tr的页脉冲信号。在C点，由于AB上信号的传输与反射，会感应出一个宽度为信号在AB线上的延迟时间的两倍，即2Td的正脉冲信号。这就是信号间的交互干扰。干扰信号的强度与C点信号的di/at有关，与线间距离有关。当两信号线不是很长时，AB上看到的实际是两个脉冲的迭加。 CMOS工艺制造的微控制由输入阻抗高，噪声高，噪声容限也很高，数字电路是迭加100~200mv噪声并不影响其工作。若图中AB线是一模拟信号，这种干扰就变为不能容忍。如印刷线路板为四层板，其中有一层是大面积的地，或双面板，信号线的反面是大面积的地时，这种信号间的交*干扰就会变小。原因是，大面积的地减小了信号线的特性阻抗，信号在D端的反射大为减小。特性阻抗与信号线到地间的介质的介电常数的平方成反比，与介质厚度的自然对数成正比。若AB线为一模拟信号，要避免数字电路信号线CD对AB的干扰，AB线下方要有大面积的地，AB线到CD线的距离要大于AB线与地距离的2~3倍。可用局部屏蔽地，在有引结的一面引线左右两侧布以地线。 (4) 减小来自电源的噪声 电源在向系统提供能源的同时，也将其噪声加到所供电的电源上。电路中微控制器的复位线，中断线，以及其它一些控制线最容易受外界噪声的干扰。电网上的强干扰通过电源进入电路，即使电池供电的系统，电池本身也有高频噪声。模拟电路中的模拟信号更经受不住来自电源的干扰。 (5) 注意印刷线板与元器件的高频特性 在高频情况下，印刷线路板上的引线，过孔，电阻、电容、接插件的分布电感与电容等不可忽略。电容的分布电感不可忽略，电感的分布电容不可忽略。电阻产生对高频信号的反射，引线的分布电容会起作用，当长度大于噪声频率相应波长的1/20时，就产生天线效应，噪声通过引线向外发射。 印刷线路板的过孔大约引起0.6pf的电容。 一个集成电路本身的封装材料引入2~6pf电容。 一个线路板上的接插件，有520nH的分布电感。一个双列直扦的24引脚集成电路扦座，引入4~18nH的分布电感。 这些小的分布参数对于这行较低频率下的微控制器系统中是可以忽略不计的;而对于高速系统必须予以特别注意。 (6) 元件布置要合理分区 元件在印刷线路板上排列的位置要充分考虑抗电磁干扰问题，原则之一是各部件之间的引线要尽量短。在布局上，要把模拟信号部分，高速数字电路部分，噪声源部分(如继电器，大电流开关等)这三部分合理地分开，使相互间的信号耦合为最小。 G 处理好接地线 印刷电路板上，电源线和地线最重要。克服电磁干扰，最主要的手段就是接地。 对于双面板，地线布置特别讲究，通过采用单点接地法，电源和地是从电源的两端接到印刷线路板上来的，电源一个接点，地一个接点。印刷线路板上，要有多个返回地线，这些都会聚到回电源的那个接点上，就是所谓单点接地。所谓模拟地、数字地、大功率器件地开分，是指布线分开，而最后都汇集到这个接地点上来。与印刷线路板以外的信号相连时，通常采用屏蔽电缆。对于高频和数字信号，屏蔽电缆两端都接地。低频模拟信号用的屏蔽电缆，一端接地为好。 对噪声和干扰非常敏感的电路或高频噪声特别严重的电路应该用金属罩屏蔽起来。 (7) 用好去耦电容。 好的高频去耦电容可以去除高到1GHZ的高频成份。陶瓷片电容或多层陶瓷电容的高频特性较好。设计印刷线路板时，每个集成电路的电源，地之间都要加一个去耦电容。去耦电容有两个作用：一方面是本集成电路的蓄能电容，提供和吸收该集成电路开门关门瞬间的充放电能;另一方面旁路掉该器件的高频噪声。数字电路中典型的去耦电容为0.1uf的去耦电容有5nH分布电感，它的并行共振频率大约在7MHz左右，也就是说对于10MHz以下的噪声有较好的去耦作用，对40MHz以上的噪声几乎不起作用。 1uf，10uf电容，并行共振频率在20MHz以上，去除高频率噪声的效果要好一些。在电源进入印刷板的地方和一个1uf或10uf的去高频电容往往是有利的，即使是用电池供电的系统也需要这种电容。 每10片左右的集成电路要加一片充放电电容，或称为蓄放电容，电容大小可选10uf。最好不用电解电容，电解电容是两层溥膜卷起来的，这种卷起来的结构在高频时表现为电感，最好使用胆电容或聚碳酸酝电容。 去耦电容值的选取并不严格，可按C=1/f计算;即10MHz取0.1uf，对微控制器构成的系统，取0.1~0.01uf之间都可以。 03 降低噪声与电磁干扰的一些经验。 (1) 能用低速芯片就不用高速的，高速芯片用在关键地方。 (2) 可用串一个电阻的办法，降低控制电路上下沿跳变速率。 (3) 尽量为继电器等提供某种形式的阻尼。 (4) 使用满足系统要求的最低频率时钟。 (5) 时钟产生器尽量*近到用该时钟的器件。石英晶体振荡器外壳要接地。 (6) 用地线将时钟区圈起来，时钟线尽量短。 (7)I/O驱动电路尽量*近印刷板边，让其尽快离开印刷板。对进入印制板的信号要加滤波，从高噪声区来的信号也要加滤波，同时用串终端电阻的办法，减小信号反射。 (8)MCD无用端要接高，或接地，或定义成输出端，集成电路上该接电源地的端都要接，不要悬空。 (9) 闲置不用的门电路输入端不要悬空，闲置不用的运放正输入端接地，负输入端接输出端。 (10) 印制板尽量使用45折线而不用90折线布线以减小高频信号对外的发射与耦合。 (11) 印制板按频率和电流开关特性分区，噪声元件与非噪声元件要距离再远一些。 (12) 单面板和双面板用单点接电源和单点接地、电源线、地线尽量粗，经济是能承受的话用多层板以减小电源，地的容生电感。 (13) 时钟、总线、片选信号要远离I/O线和接插件。 (14) 模拟电压输入线、参考电压端要尽量远离数字电路信号线，特别是时钟。 (15) 对A/D类器件，数字部分与模拟部分宁可统一下也不要交*。 (16) 时钟线垂直于I/O线比平行I/O线干扰小，时钟元件引脚远离I/O电缆。 (17) 元件引脚尽量短，去耦电容引脚尽量短。 (18) 关键的线要尽量粗，并在两边加上保护地。高速线要短要直。 (19) 对噪声敏感的线不要与大电流，高速开关线平行。 (20) 石英晶体下面以及对噪声敏感的器件下面不要走线。 (21) 弱信号电路，低频电路周围不要形成电流环路。 (22) 任何信号都不要形成环路，如不可避免，让环路区尽量小。 (23) 每个集成电路一个去耦电容。每个电解电容边上都要加一个小的高频旁路电容。 (24) 用大容量的钽电容或聚酷电容而不用电解电容作电路充放电储能电容。使用管状电容时，外壳要接地。","link":"/blog-cn/a1fc874f/PCB%E5%B8%83%E7%BA%BF%E5%9F%BA%E6%9C%AC%E8%A7%84%E8%8C%83/"},{"title":"aws","text":"使用AWS运行代码当本地机器的计算资源有限时，我们可以通过云计算服务获取更强大的计算资源来运行本书中的深度学习代码。本节将介绍如何在AWS（亚马逊的云计算服务）上申请实例并通过Jupyter笔记本运行代码。本节中的例子有如下两个步骤: 申请含一个K80 GPU的“p2.xlarge”实例。 安装CUDA及相应GPU版本的MXNet。 申请其他类型的实例或安装其他版本的MXNet的方法同本节类似。 申请账号并登陆首先，我们需要在 https://aws.amazon.com/ 网站上创建账号。这通常需要一张信用卡。需要注意的是，AWS中国需要公司实体才能注册。如果你是个人用户，请注册AWS全球账号。 登陆AWS账号后，点击图11.8红框中的“EC2”进入EC2面板。 创建并运行EC2实例图11.9展示了EC2面板的界面。在图11.9右上角红框处选择离我们较近的数据中心来减低延迟。我们可以选离国内较近的亚太地区，例如Asia Pacific（Seoul）。注意，有些数据中心可能没有GPU实例。点击图11.9下方红框内“Launch Instance”按钮启动实例。 图11.10的最上面一行显示了配置实例所需的7个步骤。在第一步“1. Chosse AMI”中，选择Ubuntu 16.04作为操作系统。","link":"/blog-cn/1f26b7b2/aws/"},{"title":"linux系统下安装Nodejs","text":"前言Linux有很多个发行版本，不同的发行版本有不同的包管理工具。为了安装指定的Node.js版本，有时候需要花一些精力找攻略或者安装额外的包管理工具等，有些包管理工具并没有最新的Node.js版本。所以，如果是Linux系统，索性直接使用编译好的二进制文件进行安装是最省心省力的。 安装 下载指定版本的二进制文件 在Node.js官方的发布网站https://nodejs.org/en/下载合适的二进制包，比如我要安装v13.12.0版本，我需要下载二进制包为node-v13.12.0-linux-x64.tar.xz。 解压文件 1tar -xvf node-v13.12.0-linux-x64.tar.xz 拷贝文件到指定目录 1sudo cp -r node-v13.12.0-linux-x64/* /usr/local/ 测试是否安装成功 root@blackmatch:# node -vv13.12.0root@blackmatch:# npm -v6.14.4root@blackmatch:# npx -v6.14.4 总结 二进制包一定要下载合适的（比如x64、x86）等。 安装完成后如果相关命令不生效，请重新打开一个终端即可生效。","link":"/blog-cn/9211474f/linux%E7%B3%BB%E7%BB%9F%E4%B8%8B%E5%AE%89%E8%A3%85Nodejs/"},{"title":"secret blog---发布博客","text":"您好, 这里需要密码. 7217cdf2137586a98d94c638508d52a08c986586e9adae78c24b6061df239efa6bd74a8964a6fb1c5fdfd334c074b58043854ecd7c3614829a9b8d3d84571df930bf17369d2e3e7e601be24d664de9c0c76c6db3d34f24c884bbbab57ab54364779e234cbbceeb71ae237828692bece43940cf1c350df9c1aee1082e2186aff9b42472f393244a27262b44b3c6b344b331d4d9b7915e119c020ee0de438ea6abbeef2d8fc96d5bd4283a6f73b696409f11e51b789d78b883654ca541996d3aa787db433363c2742f5196a016431cc2ed6d1ebb55ca8e85cf5fb6c02d38e43a3eb2195dc5449c73d46e11272caaab38b6460447a8bc804a0cc8909764a30f5701dee5e0eadc12a00fc9e23f9631ef6eb02f8f4e631fecc29bf7b110c1de9f8ce20ebd38ffe5c7db157c5ce2ec2e333989b81e6d8713683bf6cb02f731109da98fa1b32296c950926ed48b61681630480e33156b55f33ec38e7f8cb127d3eff772362876b4720e10a0a4b1e20670eb8ac855c3d1343259a83f1c76d59aa7d3423312190e59b0fd11d8d8797209292ae4297111db9c3827284ea00197a9c5fc6307bb0e5df7a5d8b6b4edb570c19606e937520efa9faa2c120b8c8a6a20d85cb950","link":"/blog-cn/d9bfec68/secret-blog/"},{"title":"使用Simulink_Test进行单元测试","text":"您好, 这里需要密码. ","link":"/blog-cn/5beb955a/%E4%BD%BF%E7%94%A8Simulink-Test%E8%BF%9B%E8%A1%8C%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/"},{"title":"基于模型设计的测试与验证-案例一","text":"需求追溯 需求追溯管理 Simulink Requirements 搜索找到Requirements Manager并打开Requirements Editor 需求导入与编辑 – 导入系统需求 需求间追溯 需求导入与编辑 – 需求更改 需求导入与编辑 – 需求添加 需求与模型追溯 模型与代码的追溯生成代码（Ctrl+B）—-勾选Analysis下的Show code tracebility 生成追溯矩阵","link":"/blog-cn/f5ab5f63/%E5%9F%BA%E4%BA%8E%E6%A8%A1%E5%9E%8B%E8%AE%BE%E8%AE%A1%E7%9A%84%E6%B5%8B%E8%AF%95%E4%B8%8E%E9%AA%8C%E8%AF%81-%E6%A1%88%E4%BE%8B%E4%B8%80/"},{"title":"基于模型设计的测试与验证-案例三","text":"功能测试 功能测试流程 Simulink Test 创建测试装具 导入测试用例 添加测试评价 Assessmentverify(engaged==Exp_engaged,’engaged:eq:Exp_engaged’,’Failed outputcheck for “engaged”‘);verify(tspeed==Exp_tspeed,’tspeed:eq:Exp_tspeed’,’Failed output checkfor “tspeed”‘); 完成测试装具 测试结果观测 测试自动化管理 测试覆盖度设置 测试结果","link":"/blog-cn/8c77e7c7/%E5%9F%BA%E4%BA%8E%E6%A8%A1%E5%9E%8B%E8%AE%BE%E8%AE%A1%E7%9A%84%E6%B5%8B%E8%AF%95%E4%B8%8E%E9%AA%8C%E8%AF%81-%E6%A1%88%E4%BE%8B%E4%B8%89/"},{"title":"基于模型设计的测试与验证","text":"基于模型设计的测试与验证 ======================= ASPICE流程 模型设计 – 需求管理 模型设计 - 架构设计 模型设计 – 接口设计 模型设计 - 详细设计 设计验证 - 建模规范检查 设计验证 – 设计缺陷检查 设计验证 - 功能测试 设计验证 – 测试覆盖度检查 设计实现 - 自动代码生成 设计实现 – 代码生成优化 设计实现 – 生成AUTOSAR代码 代码生成过程验证 - 等效测试 代码集成验证 集成测试 ISO26262开发流程 基于模型设计的测试验证流程","link":"/blog-cn/e181285d/%E5%9F%BA%E4%BA%8E%E6%A8%A1%E5%9E%8B%E8%AE%BE%E8%AE%A1%E7%9A%84%E6%B5%8B%E8%AF%95%E4%B8%8E%E9%AA%8C%E8%AF%81/"},{"title":"基于模型设计的测试与验证-案例二","text":"模型检查 静态检查 静态检查内容 ============ ▪模型规范 ▪ 模型度量 ▪ 设计错误 在线检查 勾选 Edit-Time Checks后看到stateflow模块边框变黄了，鼠标指向叹号图标显示Block name violation(模型命名违规) 双击叹号图标显示警告 Block name has invalid C identifier(模块名字对C识别器无效，当自动生成C代码时产生错误，不满足C语言的命名规则) 把模型名字的空格删除后，模型的黄框消失 点击进入stateflow后看到仍然有黄色边框 修改为 en: entry: entry: engaged = true; tspeed = tspeed + incdec; tspeed = tspeed - incdec; 建模规范检查 点击OK按钮后出现加载checks框 等待一会儿跳出如下对话框 勾选建模规范后，点击Run Selected Checks 跑一下建模规范 运行结果 手动改warning 把Nonscalar Signals 设置为on 再次运行，结果有两个警告变成了一个警告 批量更改 更改后模型的颜色大小等都发生了改变，符合标准了 例外排除 子系统名字很长又不报错的设置如下 运行错误检查 错误查看高亮显示 调试修改 修改后 [after(incdec*10/holdrate… ,tick)] 重新检查 模型度量 运行All Metrics","link":"/blog-cn/ce2b71ca/%E5%9F%BA%E4%BA%8E%E6%A8%A1%E5%9E%8B%E8%AE%BE%E8%AE%A1%E7%9A%84%E6%B5%8B%E8%AF%95%E4%B8%8E%E9%AA%8C%E8%AF%81-%E6%A1%88%E4%BE%8B%E4%BA%8C/"},{"title":"搭建个人博客","text":"您好, 这里需要密码. ","link":"/blog-cn/4f9c12a0/%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"},{"title":"电动车窗例程分析（一）","text":"动车窗例程分析打开模型：在MATLAB命令窗口输入： slexPowerWindowStart 即可打开工程文件，其中模型文件如下图所示： 模型分析：（一）封装帮助信息子系统分析 1、双击封装子系统打开帮助文档如图： 2、编辑封装子系统 打开如下图所示Mask Edit窗口 右键点击Properties…打开属性对话框，再选Callbacks页面中的OpenFcn*，如图所示： 3、重新创建封装子系统 ①建立子系统 ②生成子系统后删除输入输出模块，如图所示： ③封装子系统 出现Editor Mask对话框，在Icon &amp; Ports中写入disp(‘?’)，点击OK ④增加阴影深度 选择要增加阴影深度的模块，然后在 Format 选项卡上点击 Shadow。 ⑤添加Callback功能 右键点击Properties…打开属性对话框，再选Callbacks页面中的OpenFcn*，写入showdemo(‘slexPowerWindowScript’) 到此已经重新建立了帮助信息的封装子系统。 （二）封装子系统打开模型分析同上面（一）设置如图所示 选择要增加阴影深度的模块，然后在 Format 选项卡上点击 Shadow。 （三）driver_switch可变子系统模块分析 1、双击driver_switch模块打开，如图所示 Normal子系统为激活状态，Communication Protocol为非激活状态 2、更改激活状态 打开driver_switch子系统的Block Parameters (Subsystem)，可以看到DPS==1时，Normal模块激活，查看工作区参数DPS=1，如图 在MATLAB命令窗口键入 DPS=0后，Communication Protocol为激活状态，如图 3、Normal子模块分析 在MATLAB命令窗口键入 DPS=1后，打开Normal模块，如图 Truth table 参数可以具有任何数据类型的布尔值（0 或1），包括定点数据类型。如果表中包含非布尔值，表的数据类型必须是 double。 输入数与行数之间的关系为： number of rows = 2^(number\\ of\\ inputs)^ Simulink^®^ 通过计算来自输入向量元素的行索引，返回矩阵的一行。Simulink通过生成一个二进制数字（具有零值的输入向量元素为 0，具有非零值的元素为1），然后将结果加上 1 来计算索引。对于输入向量，m 元素的 u 为： row index = 1 + u(m)*2^0^ + u(m-1)*2^1^ + … + u(1)*2^m-1^ 例如： 输入向量U, 元素个数为2，则CmbLogic的行数为2^2=4 行index = 1+U(2)*2^0+U(1)*2^1 U(1)，U(2) 输出向量 （1,1） 计算index = 4 （1,0,0） （1,0） 计算index = 3 （0,1,0） （0,1） 计算index = 2 （0,0,1） （0,0） 计算index = 4 （1,0,0） 4、CommunicationProtocol子模块分析 在MATLAB命令窗口键入 DPS=0后，打开Communication Protocol模块，如图 ①Electrical Reference（接地线） 电气元件的电气参考块表示的电接地。直接接地的所有模块的节能端口必须连接到“ 电气参考”模块。具有电气元件的模型必须包含至少一个电气参考块。 ②电源模块 直流电压源，理想的电压源在其上保持恒定的电压。输出端，与流过源的电流无关。输出电压由恒定电压参数定义，且可以是任何实际值。 ③Solver Configuration（设置求解器） 由连接的Simscape™框图表示的每个物理网络都需要求解器设置信息以进行仿真。“ 求解器配置”块指定了在开始仿真之前模型需要的求解器参数。每个拓扑不同的Simscape框图都需要一个连接到它的规划求解配置模块。 ④switch模块 连接端口模块放置在由RFBlockset™等效基带模块组成的子系统内部，可)在子系统边界上创建一个开放式物理建模连接器端口。当它连接到连接线时，端口变为实心。 所述开关块模型由外部物理信号控制的开关。如果外部物理信号PS大于Threshold参数中指定的值，则开关闭合，否则开关断开。 ⑤DAQ模块 ADC driverup UnitDelay 模块按指定的采样期间保持和延迟输入。当放置于迭代子系统中时，该模块将其输入保持并延迟一个迭代。此模块相当于z^-1^ 离散时间运算符。此模块接受一个输入并生成一个输出。每个信号可以是标量，也可以是向量。如果输入为向量，模块会按相同的采样期间保持和延迟向量中的所有元素。 Zero-OrderHold 模块在您指定的采样期间内保持其输入不变。如果输入为向量，模块会按相同的采样期间保持向量中的所有元素。 统一编码器块对输入向量或矩阵中的每个浮点样本执行以下两个操作： 使用相同的精度量化值；将量化的浮点值编码为整数值 Data Type Conversion 模块可将任何Simulink^®^ 数据类型的输入信号转换为您指定的数据类型。 DAQDAQ driver upADC driver upconditioning driver up 电压传感器模块代表一个理想的电压传感器，即，其将电压的电路的两个点之间测量到的物理信号成比例的电压的装置。 在Simulink的PS转换器块中的输入的Simulink转换^®^信号转换成物理信号。使用此块可将Simulink源或其他Simulink块连接到物理网络图的输入 ⑥control模块 ⑦CAN module模块 （四）passenger_switch可变子系统模块分析 passenger_switch可变子系统模块同上面的driver_switch模块，不再赘述。","link":"/blog-cn/a272824f/%E7%94%B5%E5%8A%A8%E8%BD%A6%E7%AA%97%E4%BE%8B%E7%A8%8B%E5%88%86%E6%9E%90%EF%BC%88%E4%B8%80%EF%BC%89/"}],"tags":[{"name":"Encrypted","slug":"Encrypted","link":"/tags/Encrypted/"}],"categories":[{"name":"Simulink","slug":"Simulink","link":"/categories/Simulink/"}]}